version: '3.4'

services:
    php:
        build:
            context: .
            target: app_php
            args:
                SYMFONY_VERSION: ${SYMFONY_VERSION:-}
                STABILITY: ${STABILITY:-stable}
        restart: unless-stopped
        volumes:
            - php_socket:/var/run/php
        healthcheck:
            interval: 10s
            timeout: 3s
            retries: 3
            start_period: 30s
        environment:
            DATABASE_URL: ${DATABASE_URL}
            REMOTE_DATABASE_URL: ${REMOTE_DATABASE_URL}

    caddy:
        build:
            context: .
            target: app_caddy
        depends_on:
            - php
        environment:
            SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
        restart: unless-stopped
        volumes:
            - php_socket:/var/run/php
            - caddy_data:/data
            - caddy_config:/config
        ports:
            # HTTP
            -   target: 80
                published: ${HTTP_PORT:-80}
                protocol: tcp
            # HTTPS
            -   target: 443
                published: ${HTTPS_PORT:-443}
                protocol: tcp
            # HTTP/3
            -   target: 443
                published: ${HTTP3_PORT:-443}
                protocol: udp

    database:
        container_name: database
        image: 'postgis/postgis:${POSTGRES_VERSION:-14}-3.3-alpine'
        environment:
            POSTGRES_DB: '${POSTGRES_DB:-zebrina_db}'
            POSTGRES_PASSWORD: '${POSTGRES_PASSWORD:-zebrina_password}'
            POSTGRES_USER: '${POSTGRES_USER:-zebrina_user}'
        volumes:
            - 'db-data:/var/lib/postgresql/data:rw'

volumes:
    db-data:
    remote-db-data:
    php_socket:
    caddy_data:
    caddy_config:
